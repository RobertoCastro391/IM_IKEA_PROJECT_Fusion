/* 
  *   Speech.java generated by speechmod 
 */

package Modalities;

import scxmlgen.interfaces.IModality;

public enum Speech implements IModality {

	// CHANGE_COLOR_AZUL("[SPEECH][CHANGE_COLOR][AZUL]",1500),
	// CHANGE_COLOR_VERDE("[SPEECH][CHANGE_COLOR][VERDE]",1500),
	// CHANGE_COLOR_CINZENTO("[SPEECH][CHANGE_COLOR][CINZENTO]",1500),
	// CHANGE_COLOR_VERMELHO("[SPEECH][CHANGE_COLOR][VERMELHO]",1500),
	// CHANGE_COLOR_BRANCO("[SPEECH][CHANGE_COLOR][BRANC]",1500),
	// CHANGE_COLOR_ROSA("[SPEECH][CHANGE_COLOR][ROSA]",1500),
	// CHANGE_COLOR_AMARELO("[SPEECH][CHANGE_COLOR][AMARELO]",1500),
	// CHANGE_COLOR_PRETO("[SPEECH][CHANGE_COLOR][PRETO]",1500),
	// CHANGE_COLOR_LARANJA("[SPEECH][CHANGE_COLOR][LARANJA]",1500),

	// ;

	OPEN_WEBSITE("[SPEECH][OPEN_WEBSITE]", 5000),
	SHOW_FAVORITES("[SPEECH][SHOW_FAVORITES]", 5000),
	SHOW_CART("[SPEECH][SHOW_CART]", 5000),
	ADD_TO_CART("[SPEECH][ADD_TO_CART]", 5000),
	ADD_TO_FAVORITES("[SPEECH][ADD_TO_FAVORITES]", 5000),
	REMOVE_PRODUCT_CART("[SPEECH][REMOVE_CART]", 5000),
	REMOVE_PRODUCT_FAVORITES("[SPEECH][REMOVE_FAVORITES]", 5000),
	SHOW_MORE("[SPEECH][SHOW_MORE]", 5000),
	ASK_HELP("[SPEECH][ASK_HELP]", 5000),

	SEARCH_PRODUCT_CAMAS("[SPEECH][SHOW_PRODUCTS][CAMAS]", 5000),
	SEARCH_PRODUCT_CADEIRAS("[SPEECH][SHOW_PRODUCTS][CADEIRAS]", 5000),
	SEARCH_PRODUCT_ARMARIOS("[SPEECH][SHOW_PRODUCTS][ARMARIOS]", 5000),
	SEARCH_PRODUCT_ESTANTES("[SPEECH][SHOW_PRODUCTS][ESTANTES]", 5000),
	SEARCH_PRODUCT_SOFAS("[SPEECH][SHOW_PRODUCTS][SOFAS]", 5000),
	SEARCH_PRODUCT_MESAS("[SPEECH][SHOW_PRODUCTS][MESAS]", 5000),

	SELECT("[SPEECH][SELECT]", 5000),

	SCROLL_UP("[SPEECH][SCROLL_UP]", 5000),
	SCROLL_DOWN("[SPEECH][SCROLL_DOWN]", 5000),

	GO_BACK("[SPEECH][GO_BACK]", 5000),
	MAIN_PAGE("[SPEECH][MAIN_PAGE]", 5000),

	FINALIZE_ORDER("[SPEECH][FINALIZE_ORDER]", 5000),

	AFFIRM("[SPEECH][AFFIRM]", 5000),
	DENY("[SPEECH][DENY]", 5000)

	;

	private String event;
	private int timeout;

	Speech(String m, int time) {
		event = m;
		timeout = time;
	}

	@Override
	public int getTimeOut() {
		return timeout;
	}

	@Override
	public String getEventName() {
		return event;
	}

	@Override
	public String getEvName() {
		return getModalityName().toLowerCase() + event.toLowerCase();
	}

}
